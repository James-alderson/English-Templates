{"version":3,"file":"./js/lazy_load.0d0484f5b27ef2e62b3f.js","mappings":";;;;;AAAA,IAAMA,WAAW,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC;AAC9D,IAAMC,OAAO,GAAG;EACdC,SAAS,EAAE,CAAC;EACZC,UAAU,EAAE;AACd,CAAC;AACD,IAAMC,YAAY,GAAG,IAAIC,oBAAoB,CAACC,cAAc,EAAEL,OAAO,CAAC;AAEtE,SAASK,cAAcA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EACzCD,OAAO,CAACE,OAAO,CAAC,UAACC,KAAK,EAAK;IACzB,IAAI,CAACA,KAAK,CAACC,cAAc,EAAE;IAE3B,IAAIC,SAAS,GAAGF,KAAK,CAACG,MAAM;IAC5BD,SAAS,CAACE,GAAG,GAAGF,SAAS,CAACG,OAAO,CAACD,GAAG;IAErCN,QAAQ,CAACQ,SAAS,CAACJ,SAAS,CAAC;EAC/B,CAAC,CAAC;AACJ;AAEAd,WAAW,CAACW,OAAO,CAAC,UAACG,SAAS;EAAA,OAAKR,YAAY,CAACa,OAAO,CAACL,SAAS,CAAC;AAAA,EAAC,C","sources":["webpack://photosen/./src/js/lazy-load.js"],"sourcesContent":["const LAZY_IMAGES = document.querySelectorAll('img[data-src]')\nconst OPTIONS = {\n  threshold: 0,\n  rootMargin: '0px 0px 100px 0px',\n}\nconst IMG_OBSERVER = new IntersectionObserver(image_observer, OPTIONS)\n\nfunction image_observer(entries, observer) {\n  entries.forEach((entry) => {\n    if (!entry.isIntersecting) return\n\n    let lazyImage = entry.target\n    lazyImage.src = lazyImage.dataset.src\n\n    observer.unobserve(lazyImage)\n  })\n}\n\nLAZY_IMAGES.forEach((lazyImage) => IMG_OBSERVER.observe(lazyImage))\n"],"names":["LAZY_IMAGES","document","querySelectorAll","OPTIONS","threshold","rootMargin","IMG_OBSERVER","IntersectionObserver","image_observer","entries","observer","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","observe"],"sourceRoot":""}